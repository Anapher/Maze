<local:MainUserControl
    x:Class="Maze.Administration.Views.Main.LoginView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:Anapher.Wpf.Toolkit.Extensions;assembly=Anapher.Wpf.Toolkit"
    xmlns:local="clr-namespace:Maze.Administration.Views.Main"
    xmlns:main="clr-namespace:Maze.Administration.ViewModels.Main;assembly=Maze.Administration.ViewModels"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="http://prismlibrary.com/"
    xmlns:tx="http://unclassified.software/source/txtranslation"
    d:DataContext="{d:DesignInstance main:LoginViewModel}"
    d:DesignHeight="550"
    d:DesignWidth="920"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <Grid>
        <Border>
            <Viewbox
                MaxWidth="450"
                MaxHeight="450"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Opacity=".1"
                RenderTransformOrigin="0.5,0.5">
                <Viewbox.Style>
                    <Style TargetType="Viewbox">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform x:Name="ViewBoxRotation" Angle="0" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoggingIn}" Value="true">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                RepeatBehavior="Forever"
                                                Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                To="-360"
                                                Duration="0:0:4" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                To="-360"
                                                Duration="0:0:0.8">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Viewbox.Style>
                <Canvas Width="495.600" Height="495.700">
                    <Canvas>
                        <Canvas>
                            <Canvas>
                                <Canvas>
                                    <Canvas>
                                        <!--  Ebene 1/Ebene 2/Layer 1/ Gruppe / Gruppe 2/ Pfad  -->
                                        <Path Data="F1 M 366.600,244.200 C 364.600,180.000 312.000,129.000 247.800,128.900 L 247.800,0.000 C 383.300,0.000 493.600,108.800 495.600,244.200 L 366.600,244.200 Z" Fill="#ff444444" />

                                        <!--  Ebene 1/Ebene 2/Layer 1/ Gruppe / Gruppe 2/ Pfad 2  -->
                                        <Path Data="F1 M 129.000,253.300 C 132.000,316.800 184.300,366.700 247.800,366.800 L 247.800,366.800 L 247.800,495.700 L 247.800,495.700 C 113.000,495.700 3.000,388.000 0.000,253.300 L 129.000,253.300 Z" Fill="#ff444444" />

                                    </Canvas>

                                    <!--  Ebene 1/Ebene 2/Layer 1/ Gruppe / Pfad 3  -->
                                    <Path Data="F1 M 341.000,244.200 C 339.000,192.800 295.700,152.700 244.200,154.700 C 192.800,156.700 152.700,200.000 154.700,251.500 C 156.600,301.500 197.800,341.100 247.800,341.100 L 247.800,399.200 C 164.200,399.200 96.500,331.400 96.500,247.900 C 96.500,164.400 164.300,96.500 247.900,96.500 C 330.000,96.500 397.200,162.000 399.200,244.100 L 341.000,244.200 Z" Fill="#ffcdcdcd" />

                                    <!--  Ebene 1/Ebene 2/Layer 1/ Gruppe / Pfad 4  -->
                                    <Path Data="F1 M 247.844,213.951 C 266.566,213.951 281.744,229.128 281.744,247.851 C 281.744,266.573 266.566,281.751 247.844,281.751 C 229.121,281.751 213.944,266.573 213.944,247.851 C 213.944,229.128 229.121,213.951 247.844,213.951 Z" Fill="#ff444444" />

                                </Canvas>

                            </Canvas>

                        </Canvas>

                    </Canvas>
                </Canvas>
            </Viewbox>
        </Border>
        <StackPanel
            Width="300"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsEnabled="{Binding IsLoggingIn, Converter={StaticResource SwitchBooleanConverter}}"
            Orientation="Vertical">
            <TextBlock Text="{tx:T Server}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding ServerUrl}" />
            </Grid>
            <Grid Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="{tx:T Username}" />
                    <TextBox
                        x:Name="UsernameTextBox"
                        Margin="0,2,0,0"
                        Text="{Binding Username}">
                        <TextBox.InputBindings>
                            <KeyBinding
                                Key="Enter"
                                Command="{Binding LoginCommand}"
                                CommandParameter="{Binding ElementName=PasswordBox, Path=(extensions:PasswordBoxExtensions.SecurePassword)}" />
                        </TextBox.InputBindings>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Column="2" Orientation="Vertical">
                    <TextBlock Text="{tx:T Password}" />
                    <PasswordBox
                        x:Name="PasswordBox"
                        Margin="0,2,0,0"
                        extensions:PasswordBoxExtensions.ListenToPasswordChange="True">
                        <PasswordBox.InputBindings>
                            <KeyBinding
                                Key="Enter"
                                Command="{Binding LoginCommand}"
                                CommandParameter="{Binding ElementName=PasswordBox, Path=(extensions:PasswordBoxExtensions.SecurePassword)}" />
                        </PasswordBox.InputBindings>
                    </PasswordBox>
                </StackPanel>
            </Grid>
            <Grid Margin="0,5,0,0">
                <StackPanel Orientation="Vertical">
                    <Button
                        Command="{Binding LoginCommand}"
                        CommandParameter="{Binding ElementName=PasswordBox, Path=(extensions:PasswordBoxExtensions.SecurePassword)}"
                        Content="{tx:T Login}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MetroButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=UsernameTextBox, Path=Text, Converter={StaticResource IsStringEmptyConverter}}" Value="true">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=PasswordBox, Path=(extensions:PasswordBoxExtensions.IsEmpty)}" Value="true">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsLoggingIn}" Value="true">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <TextBlock
                        Margin="0,2,0,0"
                        Foreground="{StaticResource ErrorBrush}"
                        Text="{Binding ErrorMessage}"
                        TextWrapping="Wrap">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ErrorMessage}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsLoggingIn}" Value="true">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsLoggingIn, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock VerticalAlignment="Center" Text="{tx:T LoginView:LoggingIn}" />
                </StackPanel>
            </Grid>
        </StackPanel>
    </Grid>
</local:MainUserControl>